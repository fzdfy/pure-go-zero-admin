syntax = "v1"

info(
    title: "menu"
    desc: "菜单权限"
    author: "yunpeng.feng"
    email: "yunpeng@mycredigo.com"
)

type (
    AddMenuReq struct {
        Name string `json:"name"`                                   // 菜单名称
        ParentId int64 `json:"parentId,optional"`                   // 父菜单ID，一级菜单为0
        Path string `json:"path,optional"`                           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
        Perms string `json:"perms,optional"`                        // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
        Type int64 `json:"type,optional"`                           // 类型   0：目录   1：菜单   2：按钮
        Icon string `json:"icon,optional"`                          // 菜单图标
        OrderNum int64 `json:"orderNum,optional"`                   // 排序
    }
    AddMenuResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    ListMenuReq struct {
        Current int64 `form:"current,default=1"`
        PageSize int64 `form:"pageSize,default=20"`
        Name string `form:"name,optional"`
        Path string `form:"path,optional"`
        Status int64 `form:"status,optional,default=-1"`
    }
    ListMenuData struct {
        Id int64 `json:"id"`                                 // 编号
        Name string `json:"name"`                            // 菜单名称
        ParentId int64 `json:"parentId"`                     // 父菜单ID，一级菜单为0
        Path string `json:"path"`                            // 菜单Path,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
        Perms string `json:"perms"`                          // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
        Type int64 `json:"type"`                             // 类型   0：目录   1：菜单   2：按钮
        Icon string `json:"icon"`                            // 菜单图标
        OrderNum int64 `json:"orderNum"`                     // 排序
        CreateBy string `json:"createBy"`                    // 创建人
        CreateTime string `json:"createTime"`                // 创建时间
        LastUpdateBy string `json:"lastUpdateBy"`            // 更新人
        LastUpdateTime string `json:"lastUpdateTime"`        // 更新时间
        DelFlag int64 `json:"delFlag"`                       // 是否删除  -1：已删除  0：正常
    }
    ListMenuResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Data []*ListMenuData `json:"data"`
        Success bool `json:"success"`
        Total int64 `json:"total"`
    }
    UpdateMenuReq struct {
        Id int64 `json:"id"`                                        // 编号
        Name string `json:"name"`                                   // 菜单名称
        ParentId int64 `json:"parentId"`                            // 父菜单ID，一级菜单为0
        Path string `json:"path,optional"`                           // 菜单URL,类型：1.普通页面（如用户管理， /sysmodel/user） 2.嵌套完整外部页面，以http(s)开头的链接 3.嵌套服务器页面，使用iframe:前缀+目标URL(如SQL监控， iframe:/druid/login.html, iframe:前缀会替换成服务器地址)
        Perms string `json:"perms,optional"`                        // 授权(多个用逗号分隔，如：sysmodel:user:add,sysmodel:user:edit)
        Type int64 `json:"type,optional"`                           // 类型   0：目录   1：菜单   2：按钮
        Icon string `json:"icon,optional"`                          // 菜单图标
        OrderNum int64 `json:"orderNum,optional"`                   // 排序
        Status int64 `json:"status,optional"`
    }
    UpdateMenuResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteMenuReq struct {
        id int64 `json:"id"`
    }
    DeleteMenuResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: sys/menu
    prefix: /api/sys/menu
)
service admin-api {
    @handler MenuAdd
    post /add (AddMenuReq) returns (AddMenuResp)

    @handler MenuList
    get /list (ListMenuReq) returns (ListMenuResp)

    @handler MenuUpdate
    post /update (UpdateMenuReq) returns (UpdateMenuResp)

    @handler MenuDelete
    post /delete (DeleteMenuReq) returns (DeleteMenuResp)
}

