syntax = "v1"

info (
	title: "user"
	desc: "用户相关"
	author: "yunpeng.feng"
	email: "yunpeng@mycredigo.com"
)

type (
    UserLoginReq struct {
        UserName string `json:"userName"`
        Password string `json:"password"`
    }
    UserLoginResp struct {
        Status string `json:"status"`
        CurrentAuthority string `json:"currentAuthority"`
        Id int64 `json:"id"`
        UserName string `json:"userName"`
        AccessToken string `json:"token"`
        AccessExpire int64 `json:"accessExpire"`
        RefreshAfter int64 `json:"refreshAfter"`
    }

    UserInfoResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Avatar string `json:"avatar"`
        Name string `json:"name"`
    }
    ListUserReq struct {
        Current int64 `form:"current,default=1"`
        PageSize int64 `form:"pageSize,default=20"`
        Name string `form:"name,optional"`
        NickName string `form:"nickName,optional"`
        Mobile string `form:"mobile,optional"`
        Email string `form:"email,optional"`
        Status int64 `form:"status,optional,default=-1"`
    }

    ListUserData struct {
        Id int64 `json:"id"`                               // 编号
        Name string `json:"name"`                          // 用户名
        NickName string `json:"nickName"`                  // 昵称
        Avatar string `json:"avatar"`                      // 头像
        Password string `json:"password"`                  // 密码
        Salt string `json:"salt"`                          // 加密盐
        Email string `json:"email"`                        // 邮箱
        Mobile string `json:"mobile"`                      // 手机号
        Status int64 `json:"status"`                       // 状态  0：禁用   1：正常
        CreateBy string `json:"createBy"`                  // 创建人
        CreateTime string `json:"createTime"`              // 创建时间
        LastUpdateBy string `json:"lastUpdateBy"`          // 更新人
        LastUpdateTime string `json:"lastUpdateTime"`      // 更新时间
        DelFlag int64 `json:"delFlag"`                     // 是否删除  -1：已删除  0：正常
    }
    ListUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Current int64 `json:"current,default=1"`
        Data []*ListUserData `json:"data"`
        PageSize int64 `json:"pageSize,default=20"`
        Success bool `json:"success"`
        Total int64 `json:"total"`
    }
    AddUserReq struct {
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
    }
    AddUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    UpdateUserReq struct {
        Id int64 `json:"id"`
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
        status int64 `json:"status"`
    }
    UpdateUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteUserReq struct {
        Id int64 `json:"id"`
    }
    DeleteUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: sys/user
    prefix: /api/sys/user
)

service admin-api {
    @handler UserInfo
    get /currentUser returns (UserInfoResp)

    @handler UserList
    get /list (ListUserReq) returns (ListUserResp)

    @handler UserAdd
    post /add (AddUserReq) returns (AddUserResp)

    @handler UserUpdate
    post /update (UpdateUserReq) returns (UpdateUserResp)

    @handler UserDelete
    post /delete (DeleteUserReq) returns (DeleteUserResp)
}

@server(
    group: sys/user
)

service admin-api {
    @handler UserLogin
    post /api/sys/user/login (UserLoginReq) returns (UserLoginResp)
}