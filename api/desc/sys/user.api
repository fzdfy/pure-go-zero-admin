syntax = "v1"

info (
	title: "user"
	desc: "用户相关"
	author: "yunpeng.feng"
	email: "yunpeng@mycredigo.com"
)

type (
    loginReq struct {
        UserName string `json:"userName"`
        Password string `json:"password"`
    }
    loginResp struct {
        Status string `json:"status"`
        CurrentAuthority string `json:"currentAuthority"`
        Id int64 `json:"id"`
        UserName string `json:"userName"`
        AccessToken string `json:"token"`
        AccessExpire int64 `json:"accessExpire"`
        RefreshAfter int64 `json:"refreshAfter"`
    }

    userInfoResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Avatar string `json:"avatar"`
        Name string `json:"name"`
    }
    addUserReq struct {
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
    }
    addUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: sys/user
    prefix: /api/sys/user
)

service admin-api {
    @handler UserInfo
    get /currentUser () returns (userInfoResp)

    @handler UserAdd
    post /add (addUserReq) returns (addUserResp)
}

@server(
    group: sys/user
)

service admin-api {
    @handler UserLogin
    post /api/sys/user/login (loginReq) returns (loginResp)
}